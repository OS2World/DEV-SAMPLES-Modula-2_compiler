DEFINITION MODULE WPSOUND;

(***************************************************************************
  OS/2 2.1 Workplace class interface for WPSound;

  Copyright (c) 1994 by Juergen Neuhoff
****************************************************************************)

(*$XL+       Modula-2 language extensions: '_' allowed for symbol names *)
(*$CDECL+    C-style procedures                                         *)
(*$A         default alignment for record fields                        *)

IMPORT SOM;
IMPORT WPABS;
IMPORT OS2DEF;

TYPE PSOMClass              = SOM.PSOMClass;
TYPE INTEGER4               = SOM.INTEGER4;
TYPE somMToken              = SOM.somMToken;
TYPE somDToken              = SOM.somDToken;
TYPE somMethodProc          = SOM.somMethodProc;
TYPE PWPSound               = POINTER TO WPSound;
TYPE PM_WPSound             = POINTER TO M_WPSound;

(************************************************************************
  Additional TYPE- and CONST-declarations supporting WPSound
*************************************************************************)

TYPE HWND                   = OS2DEF.HWND;

(*************************************************************************
  SOM class API for WPSound, including type-bound procedures
**************************************************************************)

CONST
  WPSound_MajorVersion     = 1;
  WPSound_MinorVersion     = 2;

TYPE
  WPSoundClassDataStructure   = RECORD
    classObject                 : PSOMClass;
    wpAddSoundWarningBeepPage   : somMToken;
                                END;

VAR
  WPSoundClassData : WPSoundClassDataStructure;

TYPE
  (*$SOM+ *)
  WPSound = RECORD( WPABS.WPAbstract ) END;
  (*$SOM- *)


PROCEDURE WPSoundNewClass
(
  majorVersion  : INTEGER4;
  minorVersion  : INTEGER4
)               : PSOMClass;

PROCEDURE( Self : PWPSound ) wpAddSoundWarningBeepPage
(
  hwndNotebook  : HWND
)               : LONGCARD;


(*************************************************************************
  SOM class API for M_WPSound, including type-bound procedures
**************************************************************************)

CONST
  M_WPSound_MajorVersion   = 1;
  M_WPSound_MinorVersion   = 2;

TYPE
  M_WPSoundClassDataStructure   = RECORD
    classObject                   : PSOMClass;
                                  END;

VAR
  M_WPSoundClassData : M_WPSoundClassDataStructure;

TYPE
  (*$SOM+ *)
  M_WPSound = RECORD( WPABS.M_WPAbstract ) END;
  (*$SOM- *)


PROCEDURE M_WPSoundNewClass
(
  majorVersion : INTEGER4;
  minorVersion : INTEGER4
)              : PSOMClass;

END WPSOUND.
